Задача 1
Използвайте typedef за да дефинирате алтернативни имена на следните типове:
● Функция, която не приема параметри и връща double
● Функция, която приема два double параметъра и не връща нищо
● Функция, която приема един int параметър и връща указател към функция, която не приема параметри и връща int
● Функция, която взима три указателя към три различни типа функции - същите типове като на по-горните три типа функции (за
които вече имаме алтернативни имена)
Задача 2
Използвайте стандартната функция qsort от stdlib.h за да сортирате:
● масив от int във възходящ ред
● масив от char във низходящ ред
● масив от масив от константни указатели към стринг литерали лексикографски
● масив от unsigned long във низходящ ред, като четните стойности са преди нечетните, пример:
4, 2, 6, 1, 7, 5, 3, 9, 8, 0 след сортиране: 8, 6, 4, 2, 0, 9, 7, 5, 3, 1
Задача 3
Използвайте стандартната функция bsearch от stdlib.h за да откриете някоя от стринговите литерали от сортирания лексикографски
масив от указатели към литерали
Задачи за самоподготовка
Задача 4
Напишете функция за сортиране на масив от указатели към стринг литерали, която работи с
предикатна функция, подобно на qsort (приемa като параметър указател към функция-предикат)
Напишете функции, които сортират масив:
● лексикографски, в обратен ред
● по брой символи в стринга
● по брой пунктуационни знаци в стринга
Задача 5
Напишете функция за претърсване на сортиран масив от указатели към стринг литерали. Функцията
трябва да работи с предикат, подобно на bsort. Използвайте binary search алгоритъм.
Използвайте функцията за да откриете някоя от стринг литералите от масив от предходната задача.
Задачи за самоподготовка
Задача 6 (1/2)
Можем да измерим процесорното време, необходимо за изпълнението на част от кода, използвайки функцията clock() и константата CLOCKS_PER_SEC
от time.h, по следния начин:
clock_t begin = clock();
// time-consuming thing to measure duration of (in cpu time)
clock_t end = clock();
double time_spent = (double)(end - begin) / CLOCKS_PER_SEC;
Направете масив от указатели към функции, който е сортиран по бързина на изпълнение на функциите. 
