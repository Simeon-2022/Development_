#include "/media/sf_Shared/Final_project/7_Library/Headers/interests.h"
#include "/media/sf_Shared/Final_project/7_Library/Headers/funcErrorHandling.h"
#include "/media/sf_Shared/Final_project/7_Library/Headers/configMacro.h"
#include "/media/sf_Shared/Final_project/7_Library/Headers/funcSql.h"
#include "/media/sf_Shared/Final_project/7_Library/Headers/utility.h"
#include <string.h>
#include <sqlcpr.h>

#define LIMIT1 5000
#define LIMIT2 8000
#define DAYS_FOR_UNDER_LIMIT1 10
#define DAYS_FOR_ABOVE_LIMIT1 15
#define DAYS_FOR_ABOVE_LIMIT2 20
#define INTEREST_PERCENT 0.05
#define DAYS_TO_NEW_ISSUE_DATE 5

int insertInterests(const char* strExtRef)
{
    EXEC SQL BEGIN DECLARE SECTION;
    char    ExtRef[MAX_EXTERNAL_REF_LENGHT] = { 0 };
    char    i_InvNo[MAX_INVOICE_NUMBER_LENGHT] = { 0 };
    float   i_Amount = 0.0f;
    float   i_AmountDue = 0.0f;
    char    i_Currency[MAX_LINE_CURRENCY_LENGHT] = { 0 };
    char    i_IssueDate[MAX_DATE_2_LENGHT] = { 0 };
    char    i_DueDate[MAX_DATE_2_LENGHT] = { 0 };
    int     i_CustomerID = 0;
    int     i_Seq = 0;
    char    i_OriginalInvoiceID[MAX_INVOICE_NUMBER_LENGHT] = { 0 };
    int     c_Credit_Limit = 0;
    char    i_NewInvNo[MAX_INVOICE_NUMBER_LENGHT] = { 0 };
    float   i_NewAmount = 0.0f;
    int     i_NewSeq = 0;
    char    i_NewIssueDate[MAX_DATE_2_LENGHT] = { 0 };
    char    i_NewDueDate[MAX_DATE_2_LENGHT] = { 0 };
    short   i_OrigInvNoInd = -1;
    int     MaxSeq = 0;
    int     DaysToNewDueDate = 0;
    int     isIvoiceForInterest = 0;
    EXEC SQL END DECLARE SECTION;

    strcpy(ExtRef, strExtRef);

    if (strcmp(ExtRef, ""))
    {
        EXEC SQL WHENEVER SQLERROR DO sql_error(ORA_ERR_FORMAT_7);
        EXEC SQL SELECT COUNT(*) INTO :isIvoiceForInterest 
                                 FROM customers c, invoices i
                                WHERE c.customer_id = i.customer_id
                                  AND c.external_reference = :ExtRef
                                  AND i.amount_due IS NOT NULL
                                  AND i.original_invoice_id IS NULL
                                  AND i.inv_no NOT IN ( SELECT i2.original_invoice_id
                                                          FROM invoices i2, custmers c2
                                                         WHERE c2.customer_id = i2.customer_id
                                                           AND i2.original_invoice_id IS NOT NULL);
        if (sqlca.sqlcode != 0)
	    {
		    ERROR_PRINT(ORA_ERR_FORMAT_7);
            return 0;
        }
        if (isIvoiceForInterest == 0)
        {
            OUTPUT_LOG_MSG("There is no invoice without interests for customer", ExtRef);
            printf("\nThere is no invoice without interests for customer %s\n", ExtRef);
            return 1;
        }
    }

    EXEC SQL DECLARE c_not_payed CURSOR FOR SELECT i.inv_no, i.amount, i.amount_due, i.currency, i.issue_date, i.due_date, i.customer_id, i.seq, i.original_invoice_id, c.credit_limit 
                                              FROM invoices i, customers c
                                             WHERE c.customer_id = i.customer_id
                                               AND i.amount_due IS NOT NULL
                                               AND i.original_invoice_id IS NULL 
                                               AND ( :ExtRef IS NULL OR c.external_reference = :ExtRef )
                                               AND NOT EXISTS ( SELECT inv.inv_no FROM invoices inv WHERE inv.original_invoice_id = i.inv_no );

    EXEC SQL WHENEVER SQLERROR DO sql_error(ORA_ERR_FORMAT_8);
    EXEC SQL OPEN c_not_payed;
    if (sqlca.sqlcode != 0)
	{
		OUTPUT_LOG_MSG(program.programName, ORA_ERR_FORMAT_8);
        ERROR_PRINT(ORA_ERR_FORMAT_8);
        return 0;
    }
    OUTPUT_LOG_MSG(program.programName, ORA_MSG_FORMAT_11);
    printf("Please, wait...\n");

    EXEC SQL WHENEVER SQLERROR DO sql_error(ORA_ERR_FORMAT_10);
    EXEC SQL WHENEVER NOT FOUND DO break;
 	for (;;)
	{
        EXEC SQL FETCH c_not_payed INTO :i_InvNo, :i_Amount, :i_AmountDue, :i_Currency, :i_IssueDate, :i_DueDate, :i_CustomerID, :i_Seq, :i_OriginalInvoiceID:i_OrigInvNoInd, :c_Credit_Limit;
        if (sqlca.sqlcode != 0)
	    {
		    OUTPUT_LOG_MSG(program.programName, ORA_ERR_FORMAT_10);
            ERROR_PRINT(ORA_ERR_FORMAT_10);
            return 0;
        }
        OUTPUT_LOG_MSG("Processing invoice", i_InvNo);

        EXEC SQL WHENEVER SQLERROR DO sql_error(ORA_ERR_FORMAT_7);
        EXEC SQL SELECT MAX(seq) INTO :MaxSeq
                   FROM invoices 
                  WHERE customer_id = :i_CustomerID;
        i_NewSeq = MaxSeq + 1;

        if (c_Credit_Limit < LIMIT1)
        {
            DaysToNewDueDate = DAYS_FOR_UNDER_LIMIT1;
        }
        else if ((LIMIT1 <= c_Credit_Limit) && (c_Credit_Limit <= LIMIT2))
        {
            DaysToNewDueDate = DAYS_FOR_ABOVE_LIMIT1;
        }
        else
        {
            DaysToNewDueDate = DAYS_FOR_ABOVE_LIMIT2;
        }

        convertDateFormat(i_IssueDate); //from "DD-MON-YY" to "YYYYMMDD"
        convertDateFormat(i_DueDate);

        addDaysToDate(i_DueDate, DAYS_TO_NEW_ISSUE_DATE, i_NewIssueDate);
        addDaysToDate(i_NewIssueDate, DaysToNewDueDate, i_NewDueDate);

        newInviceNo(i_CustomerID, i_NewSeq, i_NewIssueDate, i_NewInvNo);
        nullTerminateString(i_InvNo); 

        i_NewAmount = i_AmountDue * INTEREST_PERCENT;

        EXEC SQL WHENEVER SQLERROR DO sql_error(ORA_ERR_FORMAT_5);
        EXEC SQL INSERT INTO invoices (inv_no, 
                                      amount, 
                                      amount_due, 
                                      currency,
                                      issue_date, 
                                      due_date, 
                                      customer_id, 
                                      seq, 
                                      original_invoice_id) 
                               VALUES (:i_NewInvNo,
                                      :i_NewAmount,
                                      :i_NewAmount,
                                      :i_Currency,
                                      TO_DATE(:i_NewIssueDate, 'YYYYMMDD'),
                                      TO_DATE(:i_NewDueDate, 'YYYYMMDD'),
                                      :i_CustomerID,
                                      :i_NewSeq,
                                      :i_InvNo);
        OUTPUT_LOG_MSG("Inserted invoice", i_NewInvNo);
        if (sqlca.sqlcode != 0)
	    {
		    OUTPUT_LOG_MSG(program.programName, ORA_ERR_FORMAT_5);
            ERROR_PRINT(ORA_ERR_FORMAT_5);
            return 0;
        }


        EXEC SQL WHENEVER SQLERROR DO sql_error(ORA_ERR_FORMAT_4);
        exec_commit();
        if (sqlca.sqlcode != 0)
	    {
		    OUTPUT_LOG_MSG(program.programName, ORA_ERR_FORMAT_4);
            ERROR_PRINT(ORA_ERR_FORMAT_4);
            return 0;
        }
    }
    EXEC SQL WHENEVER SQLERROR DO sql_error(ORA_ERR_FORMAT_9);
    EXEC SQL CLOSE c_not_payed;
    if (sqlca.sqlcode != 0)
	{
	    OUTPUT_LOG_MSG(program.programName, ORA_ERR_FORMAT_9);
        ERROR_PRINT(ORA_ERR_FORMAT_9);
        return 0;
    }
    OUTPUT_LOG_MSG(program.programName, ORA_MSG_FORMAT_12);

    return 1;
}

