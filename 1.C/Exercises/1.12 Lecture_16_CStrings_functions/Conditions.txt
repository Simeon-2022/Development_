Задачи за самоподготовка
Задача 1
Напишете собствена версия на стандартната функция strcpy от string.h със
същия интерфейс и функционалност.
char* my_strcpy(char* dest, const char* src);

Задача 2
Напишете собствена версия на стандартната функция strncpy от string.h със
същия интерфейс и функционалност.
char* strncpy(char* dest, const char* src, size_t count);
Задачи за самоподготовка

Задача 3
Напишете собствена версия на стандартната функция strcat от string.h със
същия интерфейс и функционалност.
char *strcat( char *dest, const char *src );

Задача 4
Напишете собствена версия на стандартната функция strncat от string.h със
същия интерфейс и функционалност.
char *strncat( char *dest, const char *src, size_t count );

Задача 5
Напишете собствена версия на стандартната функция strncmp от string.h със
същия интерфейс и функционалност.
int strncmp( const char *lhs, const char *rhs, size_t count );

Задача 6
Напишете собствена версия на стандартната функция strstr от string.h със
същия интерфейс и функционалност.
char *strstr( const char* str, const char* substr );
Задачи за самоподготовка

Задача 7
Напишете функция, която връща общия брой на срещанията на всички стрингове
от подаден масив от стрингове в двуизмерен масив от char, по редове и колони.
Пример:
● { “cat”, “bat”, “hat”, “bit” }
● c a t h b a t
x r a t i j k
f s q y t k u
● Резултат: 3
Задачи за самоподготовка

Задача 8
Напишете функция, която връща подстринг от стринг по подадени индекси за начало
и край
char* extract_substr(const char* str, size_t idx_from, size_t idx_to, char result[])

Задача 9
Напишете функция, която проверява дали един масив от стрингове е сортиран
лексикографски.
Задачи за самоподготовка

Задача 10
Напишете функция, която принтира на отделни редове всички подстрингове в подаден стринг,
разделени от символите, подадени във втори стринг.
void print_str_tokens(const char* str, const char * delimiters);
Пример:
print_str_tokens(“hello,hi, bye byee_12-3”, “_ ,”);
Резултат:
hello
hi
bye
byee
12-3