Задачи за самоподготовка
Задача 1
Напишете функция, която изчислява площта на кръг, на която като
параметър подаваме радиуса и връща площта на кръга.
Използвайте глобална константа pi = 3.14 за да извършите
изчисленията.
Извикайте функцията в main() и покажете резултата.

Задачи за самоподготовка
Задача 2
Напишете функция void circle_area_qna(void). Поискайте от
потребителя да въведе радиуса с помощта на функциите :
printf("Enter a radius\n");
scanf("%lf", &r);
Използвайте функцията от предходната задача за изчисляване на
площта на кръг, която написахме преди малко за да изчислите площта
на кръга с този радиус и върнете резултата

Задачи за самоподготовка
Задача 3
Напишете програма на С, която съдържа 2 функции.
1. Първата смята лице на правоъгълен триъгълник.
2. Втората използва лицето на триъгълника, за да сметне лице на
четириъгълник със същите дължини на страните, като раменете на
триъгълника.
Напишете прототипите на функциите най-отгоре, а телата им под мейн
функцията.

Задачи за самоподготовка
Задача 4
Направете си собствена бибилиотека mymath.h(или друго име) с често-срещани
помощни математически функции.
Декларирайте функциите от предните задачи в .h файл (не забрявяйте header guards)
Дефинирайте ги в .c файл
Тествайте в отделен .c файл, който include-ва mymath.h и в който има main функция.
Не ползвайте съществуващата math.h библиотека освен за вдъхновение

Задача 5
Добавете следните функции в персоналната си mymath.h бибилиотека:
int fceil(float);
int ffloor(float);
int fround(float);
float fpow(float, int);
първите три трябва да взимат число с плаваща запетая и да го закръглят в int:
● fceil - нагоре (fceil(0.1f) == 1)
● ffloor - надолу (fceil(0.9f) == 1)
● fround - математически (fceil(0.4f) == 0, fceil(0.6f) == 1)
fpow трябва да повдига число с плаваща запетая на степен цяло число.
● бонус : напишете рекурсивна версия на fpow

Задачи за самоподготовка
Задача 6
В C няма оператор за намиране на факториел (n!), но можем да си напишем функция:
int factorial(int)
// factorial(5) == 5 * 4 * 3 * 2 * 1
// factorial(n) == n * (n - 1) * .. * 2 * 1
Направете я по два начина:
● Итеративно - с цикъл
● Рекурсивно - функцията сама да вика себе си с различни стойности на аргументите и да има
условие за излизане от безкрайна рекурсия

Задачи за самоподготовка
Задача 7
Използвайте factorial функцията за да пресметнете шанса да спечелите 6 от 49, по формулата за
комбинация (всяка топка има уникален номер и поредността на теглене няма значение):

Задачи за самоподготовка
Задача 8
Дефинирайте функциите
int randPositive(int max)
int randRange(int min, int max)
, които връщат произволна стойност в зададен от потребителя на функцията интервал
За целта може да ползвате стандартните функции( от stdlib.h и time.h ):
● rand - за да генерирате произволно число на всяко извикване.
● srand - викнете я веднъж в началото на програмата за да seed-нете random генератора за да може
rand да връща различни числа на всяко различно пускане на програмата
● time - за да можем да seed-ваме с различно число на всяко стартиране на програмата
srand(time(NULL)); // init random number generator
int randomBooleanValue = rand() % 2 == 0; // use % to clamp large value from rand