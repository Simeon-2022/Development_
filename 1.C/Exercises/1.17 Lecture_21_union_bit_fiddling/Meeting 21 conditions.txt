Задачи за самоподготовка
Нека направим малка помощна библиотека за high-level побитови манипулации с 8-битови положителни числа (например u8.h,
bits.h, ..). Ползвайте имена по ваш избор за задачите за библиотеката.

Задача 1
Библиотеката трябва да ползва unsigned char за типа на числата и за позициите на отделните битове, _Bool за стойността на бит.
Използвайте typedef за да не се налага да променяме кода на функциите на библиотеката ако решим да ползваме други типове.
Можем и да ползваме conditional compilation макроси за да потвърдим, че компилираме за архитектура с 8-битов байт по следния
начин:
#include <limits.h>
#if (CHAR_BIT != 8)
#error Error CHAR_BIT is not 8!
#else
typedef unsigned char u8;
typedef u8 u8bitpos; // used for specifying bit positions
typedef _Bool u8bit; // value of a bit
#endif
Задачи за самоподготовка
Нека направим малка помощна библиотека за high-level побитови манипулации с 8-битови положителни числа
(например u8.h, bits.h, ..).

Задача 2. Дефинирайте функция:
u8bit u8_get_bit(u8 num, u8bitpos pos);
, която връща стойността на бит от число num на дадена позиция pos

Задача 3. Дефинирайте функция:
u8 u8_set_bit_on(u8 num, u8bitpos pos);
, която променя стойността на бит от число num на дадена позиция pos на 1

Задача 4. Дефинирайте функция:
u8 u8_set_bit_off(u8 num, u8bitpos pos);
, която променя стойността на бит от число num на дадена позиция pos на 0
Задачи за самоподготовка
Нека направим малка помощна библиотека за high-level побитови манипулации с 8-битови положителни числа
(например u8.h, bits.h, ..),

Задача 5. Дефинирайте функция:
u8 u8_set_bit(u8 num, u8bitpos pos, u8bit val);
, която връща стойността на бит от число num на дадена позиция pos на val

Задача 6. Дефинирайте функция:
u8 u8_toggle_bit(u8 num, u8bitpos pos);
, която променя стойността на бит от число num на дадена позиция pos на обратната й.

Задача 7. Дефинирайте функция:
u8 u8_toggle_bits(u8 num);
, която променя всичките битове от число num на обратните, така че да са равни на обратните им стойности.
Задачи за самоподготовка
Нека направим малка помощна библиотека за high-level побитови манипулации с 8-битови положителни числа
(например u8.h, bits.h, ..),

Задача 8. Дефинирайте функция:
u8 u8_reverse_bits(u8 num);
, която обръща стойностите на битовете на число num в обратен ред

Задача 9. Дефинирайте функция:
void u8_print_bits(FILE* f, u8 num);
, която принтира битовете на число num на подадения й файлов поток

Задача 10. Дефинирайте функция:
u8 u8_scan_bits(FILE* f);
, която парсва число на побитов принцип от следващите осем символа в подадения й файлов поток.